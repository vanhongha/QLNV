#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLNV
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNV")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLOAINHANVIEN(LOAINHANVIEN instance);
    partial void UpdateLOAINHANVIEN(LOAINHANVIEN instance);
    partial void DeleteLOAINHANVIEN(LOAINHANVIEN instance);
    partial void InsertLUONG(LUONG instance);
    partial void UpdateLUONG(LUONG instance);
    partial void DeleteLUONG(LUONG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHANVIENBIENCHE(NHANVIENBIENCHE instance);
    partial void UpdateNHANVIENBIENCHE(NHANVIENBIENCHE instance);
    partial void DeleteNHANVIENBIENCHE(NHANVIENBIENCHE instance);
    partial void InsertNHANVIENCONGNHAT(NHANVIENCONGNHAT instance);
    partial void UpdateNHANVIENCONGNHAT(NHANVIENCONGNHAT instance);
    partial void DeleteNHANVIENCONGNHAT(NHANVIENCONGNHAT instance);
    partial void InsertPHONGBAN(PHONGBAN instance);
    partial void UpdatePHONGBAN(PHONGBAN instance);
    partial void DeletePHONGBAN(PHONGBAN instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::QLNV.Properties.Settings.Default.QLNVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LOAINHANVIEN> LOAINHANVIENs
		{
			get
			{
				return this.GetTable<LOAINHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<LUONG> LUONGs
		{
			get
			{
				return this.GetTable<LUONG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIENBIENCHE> NHANVIENBIENCHEs
		{
			get
			{
				return this.GetTable<NHANVIENBIENCHE>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIENCONGNHAT> NHANVIENCONGNHATs
		{
			get
			{
				return this.GetTable<NHANVIENCONGNHAT>();
			}
		}
		
		public System.Data.Linq.Table<PHONGBAN> PHONGBANs
		{
			get
			{
				return this.GetTable<PHONGBAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAINHANVIEN")]
	public partial class LOAINHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiNV;
		
		private string _TenLoaiNV;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiNVChanging(string value);
    partial void OnMaLoaiNVChanged();
    partial void OnTenLoaiNVChanging(string value);
    partial void OnTenLoaiNVChanged();
    #endregion
		
		public LOAINHANVIEN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiNV
		{
			get
			{
				return this._MaLoaiNV;
			}
			set
			{
				if ((this._MaLoaiNV != value))
				{
					this.OnMaLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiNV = value;
					this.SendPropertyChanged("MaLoaiNV");
					this.OnMaLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiNV", DbType="NChar(50)")]
		public string TenLoaiNV
		{
			get
			{
				return this._TenLoaiNV;
			}
			set
			{
				if ((this._TenLoaiNV != value))
				{
					this.OnTenLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiNV = value;
					this.SendPropertyChanged("TenLoaiNV");
					this.OnTenLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAINHANVIEN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaLoaiNV", OtherKey="MaLoaiNV")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAINHANVIEN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAINHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LUONG")]
	public partial class LUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private int _Thang;
		
		private int _Nam;
		
		private System.Nullable<decimal> _Luong1;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    partial void OnLuong1Changing(System.Nullable<decimal> value);
    partial void OnLuong1Changed();
    #endregion
		
		public LUONG()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
        public LUONG(string manv, int thang, int nam, decimal luong)
        {
            this._NHANVIEN = default(EntityRef<NHANVIEN>);
            OnCreated();

            _MaNV = manv;
            _Thang = thang;
            _Nam = nam;
            _Luong1 = luong;
        }

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Luong", Storage="_Luong1", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Luong1
		{
			get
			{
				return this._Luong1;
			}
			set
			{
				if ((this._Luong1 != value))
				{
					this.OnLuong1Changing(value);
					this.SendPropertyChanging();
					this._Luong1 = value;
					this.SendPropertyChanged("Luong1");
					this.OnLuong1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.LUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.LUONGs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private string _SoDT;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _MaPhong;
		
		private string _MaLoaiNV;
		
		private EntitySet<LUONG> _LUONGs;
		
		private EntityRef<NHANVIENBIENCHE> _NHANVIENBIENCHE;
		
		private EntityRef<NHANVIENCONGNHAT> _NHANVIENCONGNHAT;
		
		private EntityRef<LOAINHANVIEN> _LOAINHANVIEN;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnSoDTChanging(string value);
    partial void OnSoDTChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnMaLoaiNVChanging(string value);
    partial void OnMaLoaiNVChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._LUONGs = new EntitySet<LUONG>(new Action<LUONG>(this.attach_LUONGs), new Action<LUONG>(this.detach_LUONGs));
			this._NHANVIENBIENCHE = default(EntityRef<NHANVIENBIENCHE>);
			this._NHANVIENCONGNHAT = default(EntityRef<NHANVIENCONGNHAT>);
			this._LOAINHANVIEN = default(EntityRef<LOAINHANVIEN>);
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			OnCreated();
		}

        public NHANVIEN(string manv, string ten, System.Nullable<System.DateTime> ngaysinh, string sdt, string maloai, string maphong)
        {
            this._LUONGs = new EntitySet<LUONG>(new Action<LUONG>(this.attach_LUONGs), new Action<LUONG>(this.detach_LUONGs));
            this._NHANVIENBIENCHE = default(EntityRef<NHANVIENBIENCHE>);
            this._NHANVIENCONGNHAT = default(EntityRef<NHANVIENCONGNHAT>);
            this._LOAINHANVIEN = default(EntityRef<LOAINHANVIEN>);
            this._PHONGBAN = default(EntityRef<PHONGBAN>);
            OnCreated();

            _MaNV = manv;
            _TenNV = ten;
            _NgaySinh = ngaysinh;
            _SoDT = sdt;
            _MaLoaiNV = maloai;
            _MaPhong = maphong;
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDT", DbType="NChar(15)")]
		public string SoDT
		{
			get
			{
				return this._SoDT;
			}
			set
			{
				if ((this._SoDT != value))
				{
					this.OnSoDTChanging(value);
					this.SendPropertyChanging();
					this._SoDT = value;
					this.SendPropertyChanged("SoDT");
					this.OnSoDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NChar(10)")]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiNV", DbType="NChar(10)")]
		public string MaLoaiNV
		{
			get
			{
				return this._MaLoaiNV;
			}
			set
			{
				if ((this._MaLoaiNV != value))
				{
					if (this._LOAINHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiNV = value;
					this.SendPropertyChanged("MaLoaiNV");
					this.OnMaLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG", Storage="_LUONGs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<LUONG> LUONGs
		{
			get
			{
				return this._LUONGs;
			}
			set
			{
				this._LUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHANVIENBIENCHE", Storage="_NHANVIENBIENCHE", ThisKey="MaNV", OtherKey="MaNV", IsUnique=true, IsForeignKey=false)]
		public NHANVIENBIENCHE NHANVIENBIENCHE
		{
			get
			{
				return this._NHANVIENBIENCHE.Entity;
			}
			set
			{
				NHANVIENBIENCHE previousValue = this._NHANVIENBIENCHE.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIENBIENCHE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIENBIENCHE.Entity = null;
						previousValue.NHANVIEN = null;
					}
					this._NHANVIENBIENCHE.Entity = value;
					if ((value != null))
					{
						value.NHANVIEN = this;
					}
					this.SendPropertyChanged("NHANVIENBIENCHE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHANVIENCONGNHAT", Storage="_NHANVIENCONGNHAT", ThisKey="MaNV", OtherKey="MaNV", IsUnique=true, IsForeignKey=false)]
		public NHANVIENCONGNHAT NHANVIENCONGNHAT
		{
			get
			{
				return this._NHANVIENCONGNHAT.Entity;
			}
			set
			{
				NHANVIENCONGNHAT previousValue = this._NHANVIENCONGNHAT.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIENCONGNHAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIENCONGNHAT.Entity = null;
						previousValue.NHANVIEN = null;
					}
					this._NHANVIENCONGNHAT.Entity = value;
					if ((value != null))
					{
						value.NHANVIEN = this;
					}
					this.SendPropertyChanged("NHANVIENCONGNHAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAINHANVIEN_NHANVIEN", Storage="_LOAINHANVIEN", ThisKey="MaLoaiNV", OtherKey="MaLoaiNV", IsForeignKey=true)]
		public LOAINHANVIEN LOAINHANVIEN
		{
			get
			{
				return this._LOAINHANVIEN.Entity;
			}
			set
			{
				LOAINHANVIEN previousValue = this._LOAINHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._LOAINHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAINHANVIEN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._LOAINHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaLoaiNV = value.MaLoaiNV;
					}
					else
					{
						this._MaLoaiNV = default(string);
					}
					this.SendPropertyChanged("LOAINHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_PHONGBAN", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIENBIENCHE")]
	public partial class NHANVIENBIENCHE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private System.Nullable<decimal> _LuongThang;
		
		private System.Nullable<double> _BacLuong;
		
		private System.Nullable<decimal> _PhuCap;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnLuongThangChanging(System.Nullable<decimal> value);
    partial void OnLuongThangChanged();
    partial void OnBacLuongChanging(System.Nullable<double> value);
    partial void OnBacLuongChanged();
    partial void OnPhuCapChanging(System.Nullable<decimal> value);
    partial void OnPhuCapChanged();
    #endregion
		
		public NHANVIENBIENCHE()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}

        public NHANVIENBIENCHE(string manv, float bacLuong, decimal phuCap, decimal luongThang)
        {
            this._NHANVIEN = default(EntityRef<NHANVIEN>);
            OnCreated();
            _MaNV = manv;
            _BacLuong = bacLuong;
            _PhuCap = phuCap;
            _LuongThang = luongThang;
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongThang", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LuongThang
		{
			get
			{
				return this._LuongThang;
			}
			set
			{
				if ((this._LuongThang != value))
				{
					this.OnLuongThangChanging(value);
					this.SendPropertyChanging();
					this._LuongThang = value;
					this.SendPropertyChanged("LuongThang");
					this.OnLuongThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BacLuong", DbType="Float")]
		public System.Nullable<double> BacLuong
		{
			get
			{
				return this._BacLuong;
			}
			set
			{
				if ((this._BacLuong != value))
				{
					this.OnBacLuongChanging(value);
					this.SendPropertyChanging();
					this._BacLuong = value;
					this.SendPropertyChanged("BacLuong");
					this.OnBacLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuCap", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PhuCap
		{
			get
			{
				return this._PhuCap;
			}
			set
			{
				if ((this._PhuCap != value))
				{
					this.OnPhuCapChanging(value);
					this.SendPropertyChanging();
					this._PhuCap = value;
					this.SendPropertyChanged("PhuCap");
					this.OnPhuCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHANVIENBIENCHE", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.NHANVIENBIENCHE = null;
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENBIENCHE = this;
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIENCONGNHAT")]
	public partial class NHANVIENCONGNHAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private System.Nullable<decimal> _LuongNgay;
		
		private System.Nullable<double> _SoNgayLam;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnLuongNgayChanging(System.Nullable<decimal> value);
    partial void OnLuongNgayChanged();
    partial void OnSoNgayLamChanging(System.Nullable<double> value);
    partial void OnSoNgayLamChanged();
    #endregion
		
		public NHANVIENCONGNHAT()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}

        public NHANVIENCONGNHAT(string manv, double soNgayLam, decimal luongNgay)
        {
            this._NHANVIEN = default(EntityRef<NHANVIEN>);
            OnCreated();

            _MaNV = manv;
            _LuongNgay = luongNgay;
            _SoNgayLam = SoNgayLam;
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongNgay", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LuongNgay
		{
			get
			{
				return this._LuongNgay;
			}
			set
			{
				if ((this._LuongNgay != value))
				{
					this.OnLuongNgayChanging(value);
					this.SendPropertyChanging();
					this._LuongNgay = value;
					this.SendPropertyChanged("LuongNgay");
					this.OnLuongNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNgayLam", DbType="Float")]
		public System.Nullable<double> SoNgayLam
		{
			get
			{
				return this._SoNgayLam;
			}
			set
			{
				if ((this._SoNgayLam != value))
				{
					this.OnSoNgayLamChanging(value);
					this.SendPropertyChanging();
					this._SoNgayLam = value;
					this.SendPropertyChanged("SoNgayLam");
					this.OnSoNgayLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHANVIENCONGNHAT", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.NHANVIENCONGNHAT = null;
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENCONGNHAT = this;
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGBAN")]
	public partial class PHONGBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhong;
		
		private string _TenPhong;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    #endregion
		
		public PHONGBAN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NChar(20)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
	}
}
#pragma warning restore 1591
